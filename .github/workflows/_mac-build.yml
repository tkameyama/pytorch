name: mac-build

on:
  workflow_call:
    inputs:
      build-environment:
        required: true
        type: string
      runner-type:
        required: true
        type: string
      build-generates-artifacts:
        required: true
        type: boolean
      xcode-version:
        required: false
        type: string
        default: ""

env:
  IN_CI: 1 # TODO delete in favor of GITHUB_ACTIONS
  IS_GHA: 1 # TODO delete in favor of GITHUB_ACTIONS

# For setup-miniconda, see https://github.com/conda-incubator/setup-miniconda/issues/179
defaults:
  run:
    shell: bash -e -l {0}

jobs:
  build:
    runs-on: ${{ inputs.runner-type }}
    env:
      JOB_BASE_NAME: ${{ inputs.build-environment }}
      # For sccache access (only on non-forked PRs)
      AWS_ACCESS_KEY_ID: ${{ secrets.MACOS_SCCACHE_S3_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.MACOS_SCCACHE_S3_SECRET_ACCESS_KEY }}
      BUILD_ENVIRONMENT: ${{ inputs.build-environment }}
      COMPACT_JOB_NAME: ${{ inputs.build-environment }}
    steps:
      - name: Clean workspace
        shell: bash
        run: |
          echo "${GITHUB_WORKSPACE}"
          rm -rf "${GITHUB_WORKSPACE}"
          mkdir "${GITHUB_WORKSPACE}"

      - name: Checkout PyTorch
        uses: zhouzhuojie/checkout@05b13c9a0d21f08f6d5e64a1d5042246d13619d9
        with:
          ref: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || github.sha }}
          # deep clone, to allow use of git merge-base
          fetch-depth: 0
          submodules: recursive

      - name: Set xcode version
        run: |
          if [ -n "${{ inputs.xcode-version }}" ]; then
            echo "DEVELOPER_DIR=/Applications/Xcode_${{ inputs.xcode-version }}.app/Contents/Developer" >> "${GITHUB_ENV}"
          fi

      - name: Setup miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: 3.8
          activate-environment: build

      - name: Install macOS homebrew dependencies
        run: |
          # Install dependencies
          brew install libomp

      - name: Install sccache (only for non-forked PRs, and pushes to trunk)
        if: ${{ github.event_name == 'push' || github.event.pull_request.head.repo.full_name == github.repository }}
        run: |
          sudo curl --retry 3 https://s3.amazonaws.com/ossci-macos/sccache_v2.15 --output /usr/local/bin/sccache
          sudo chmod +x /usr/local/bin/sccache
          echo "SCCACHE_BUCKET=ossci-compiler-cache-circleci-v2" >> "${GITHUB_ENV}"

      - name: Build
        run: |
          echo "CMAKE_PREFIX_PATH=${CONDA_PREFIX:-"$(dirname "$(which conda)")/../"}" >> "${GITHUB_ENV}"
          .jenkins/pytorch/macos-build.sh

      - name: Archive artifacts into zip
        if: inputs.build-generates-artifacts
        run: |
          zip -1 -r artifacts.zip dist/

      - name: Store PyTorch Build Artifacts on GHA
        uses: actions/upload-artifact@v2
        if: inputs.build-generates-artifacts
        with:
          name: ${{ env.BUILD_ENVIRONMENT }}
          retention-days: 14
          if-no-files-found: error
          path: artifacts.zip
