name: pull

on:
  pull_request:
  push:
    branches:
      - master
      - main
      - release/*

concurrency:
  group: pull-${{ github.event.pull_request.number || github.sha }}-${{ github.event_name == 'workflow_dispatch' }}
  cancel-in-progress: true

jobs:
  # linux-xenial-py3_7-gcc5_4-build:
  #   name: linux-xenial-py3.7-gcc5.4
  #   uses: ./.github/workflows/_linux-build.yml
  #   with:
  #     build-environment: linux-xenial-py3.7-gcc5.4
  #     docker-image-name: pytorch-linux-xenial-py3.7-gcc5.4

  # linux-xenial-py3_7-gcc5_4-test:
  #   name: linux-xenial-py3.7-gcc5.4
  #   uses: ./.github/workflows/_linux-test.yml
  #   needs: linux-xenial-py3_7-gcc5_4-build
  #   with:
  #     build-environment: linux-xenial-py3.7-gcc5.4
  #     docker-image: ${{ needs.linux-xenial-py3_7-gcc5_4-build.outputs.docker-image }}
  #     test-matrix: |
  #       { include: [
  #         { config: "default", shard: 1, num_shards: 2, runner: "linux.2xlarge" },
  #         { config: "default", shard: 2, num_shards: 2, runner: "linux.2xlarge" },
  #         { config: "distributed", shard: 1, num_shards: 1, runner: "linux.2xlarge" },
  #         { config: "docs_test", shard: 1, num_shards: 1,  runner: "linux.2xlarge" },
  #         { config: "backwards_compat", shard: 1, num_shards: 1, runner: "linux.2xlarge" },
  #         { config: "jit_legacy", shard: 1, num_shards: 1, runner: "linux.2xlarge" },
  #       ]}

  # docs:
  #   name: docs build
  #   uses: ./.github/workflows/_docs.yml
  #   needs: linux-xenial-py3_7-gcc5_4-build
  #   with:
  #     build-environment: linux-xenial-py3.7-gcc5.4
  #     docker-image: ${{ needs.linux-xenial-py3_7-gcc5_4-build.outputs.docker-image }}

  # linux-xenial-py3_7-gcc7-build:
  #   name: linux-xenial-py3.7-gcc7
  #   uses: ./.github/workflows/_linux-build.yml
  #   with:
  #     build-environment: linux-xenial-py3.7-gcc7
  #     docker-image-name: pytorch-linux-xenial-py3.7-gcc7

  # linux-xenial-py3_7-gcc7-test:
  #   name: linux-xenial-py3.7-gcc7
  #   uses: ./.github/workflows/_linux-test.yml
  #   needs: linux-xenial-py3_7-gcc7-build
  #   with:
  #     build-environment: linux-xenial-py3.7-gcc7
  #     docker-image: ${{ needs.linux-xenial-py3_7-gcc7-build.outputs.docker-image }}
  #     test-matrix: |
  #       { include: [
  #         { config: "default", shard: 1, num_shards: 2, runner: "linux.2xlarge" },
  #         { config: "default", shard: 2, num_shards: 2, runner: "linux.2xlarge" },
  #       ]}

  # linux-xenial-py3_7-clang7-asan-build:
  #   name: linux-xenial-py3.7-clang7-asan
  #   uses: ./.github/workflows/_linux-build.yml
  #   with:
  #     build-environment: linux-xenial-py3.7-clang7-asan
  #     docker-image-name: pytorch-linux-xenial-py3-clang7-asan

  # linux-xenial-py3_7-clang7-asan-test:
  #   name: linux-xenial-py3.7-clang7-asan
  #   uses: ./.github/workflows/_linux-test.yml
  #   needs: linux-xenial-py3_7-clang7-asan-build
  #   with:
  #     build-environment: linux-xenial-py3.7-clang7-asan
  #     docker-image: ${{ needs.linux-xenial-py3_7-clang7-asan-build.outputs.docker-image }}
  #     test-matrix: |
  #       { include: [
  #         { config: "default", shard: 1, num_shards: 3, runner: "linux.2xlarge" },
  #         { config: "default", shard: 2, num_shards: 3, runner: "linux.2xlarge" },
  #         { config: "default", shard: 3, num_shards: 3, runner: "linux.2xlarge" },
  #       ]}

  # linux-xenial-py3_7-clang7-onnx-build:
  #   name: linux-xenial-py3.7-clang7-onnx
  #   uses: ./.github/workflows/_linux-build.yml
  #   with:
  #     build-environment: linux-xenial-py3.7-clang7-onnx
  #     docker-image-name: pytorch-linux-xenial-py3-clang7-onnx

  # linux-xenial-py3_7-clang7-onnx-test:
  #   name: linux-xenial-py3.7-clang7-onnx
  #   uses: ./.github/workflows/_linux-test.yml
  #   needs: linux-xenial-py3_7-clang7-onnx-build
  #   with:
  #     build-environment: linux-xenial-py3.7-clang7-onnx
  #     docker-image: ${{ needs.linux-xenial-py3_7-clang7-onnx-build.outputs.docker-image }}
  #     test-matrix: |
  #       { include: [
  #         { config: "default", shard: 1, num_shards: 2, runner: "linux.2xlarge" },
  #         { config: "default", shard: 2, num_shards: 2, runner: "linux.2xlarge" },
  #       ]}

  # linux-bionic-py3_7-clang9-build:
  #   name: linux-bionic-py3.7-clang9
  #   uses: ./.github/workflows/_linux-build.yml
  #   with:
  #     build-environment: linux-bionic-py3.7-clang9
  #     docker-image-name: pytorch-linux-bionic-py3.7-clang9

  # linux-bionic-py3_7-clang9-test:
  #   name: linux-bionic-py3.7-clang9
  #   uses: ./.github/workflows/_linux-test.yml
  #   needs: linux-bionic-py3_7-clang9-build
  #   with:
  #     build-environment: linux-bionic-py3.7-clang9
  #     docker-image: ${{ needs.linux-bionic-py3_7-clang9-build.outputs.docker-image }}
  #     test-matrix: |
  #       { include: [
  #         { config: "default", shard: 1, num_shards: 2, runner: "linux.2xlarge" },
  #         { config: "default", shard: 2, num_shards: 2, runner: "linux.2xlarge" },
  #         { config: "noarch", shard: 1, num_shards: 1, runner: "linux.2xlarge" },
  #       ]}

  # linux-vulkan-bionic-py3_7-clang9-build:
  #   name: linux-vulkan-bionic-py3.7-clang9
  #   uses: ./.github/workflows/_linux-build.yml
  #   with:
  #     build-environment: linux-vulkan-bionic-py3.7-clang9
  #     docker-image-name: pytorch-linux-bionic-py3.7-clang9

  # linux-vulkan-bionic-py3_7-clang9-test:
  #   name: linux-vulkan-bionic-py3.7-clang9
  #   uses: ./.github/workflows/_linux-test.yml
  #   needs: linux-vulkan-bionic-py3_7-clang9-build
  #   with:
  #     build-environment: linux-vulkan-bionic-py3.7-clang9
  #     docker-image: ${{ needs.linux-vulkan-bionic-py3_7-clang9-build.outputs.docker-image }}
  #     test-matrix: |
  #       { include: [
  #         { config: "default", shard: 1, num_shards: 1, runner: "linux.2xlarge" },
  #       ]}

  # linux-xenial-cuda11_3-py3_7-gcc7-build:
  #   name: linux-xenial-cuda11.3-py3.7-gcc7
  #   uses: ./.github/workflows/_linux-build.yml
  #   with:
  #     build-environment: linux-xenial-cuda11.3-py3.7-gcc7
  #     docker-image-name: pytorch-linux-xenial-cuda11.3-cudnn8-py3-gcc7

  # linux-xenial-cuda11_3-py3_7-gcc7-test:
  #   name: linux-xenial-cuda11.3-py3.7-gcc7
  #   uses: ./.github/workflows/_linux-test.yml
  #   needs: linux-xenial-cuda11_3-py3_7-gcc7-build
  #   with:
  #     build-environment: linux-xenial-cuda11.3-py3.7-gcc7
  #     docker-image: ${{ needs.linux-xenial-cuda11_3-py3_7-gcc7-build.outputs.docker-image }}
  #     test-matrix: |
  #       { include: [
  #         { config: "default", shard: 1, num_shards: 2, runner: "linux.4xlarge.nvidia.gpu" },
  #         { config: "default", shard: 2, num_shards: 2, runner: "linux.4xlarge.nvidia.gpu" },
  #         { config: "distributed", shard: 1, num_shards: 1, runner: "linux.8xlarge.nvidia.gpu" },
  #       ]}

  # # no-ops builds test USE_PER_OPERATOR_HEADERS=0 where ATen/ops is not generated
  # linux-xenial-cuda11_3-py3_7-gcc7-no-ops-build:
  #   name: linux-xenial-cuda11.3-py3.7-gcc7-no-ops
  #   uses: ./.github/workflows/_linux-build.yml
  #   with:
  #     build-environment: linux-xenial-cuda11.3-py3.7-gcc7-no-ops
  #     docker-image-name: pytorch-linux-xenial-cuda11.3-cudnn8-py3-gcc7

  # linux-bionic-rocm4_5-py3_7-build:
  #   name: linux-bionic-rocm4.5-py3.7
  #   uses: ./.github/workflows/_linux-build.yml
  #   with:
  #     build-environment: linux-bionic-rocm4.5-py3.7
  #     docker-image-name: pytorch-linux-bionic-rocm4.5-py3.7

  # linux-bionic-rocm4_5-py3_7-test:
  #   name: linux-bionic-rocm4.5-py3.7
  #   uses: ./.github/workflows/_rocm-test.yml
  #   needs: linux-bionic-rocm4_5-py3_7-build
  #   with:
  #     build-environment: linux-bionic-rocm4.5-py3.7
  #     docker-image: ${{ needs.linux-bionic-rocm4_5-py3_7-build.outputs.docker-image }}
  #     test-matrix: |
  #       { include: [
  #         { config: "default", shard: 1, num_shards: 2, runner: "linux.rocm.gpu" },
  #         { config: "default", shard: 2, num_shards: 2, runner: "linux.rocm.gpu" },
  #       ]}

  # linux-xenial-py3-clang5-mobile-build:
  #   name: linux-xenial-py3-clang5-mobile-build
  #   uses: ./.github/workflows/_linux-build.yml
  #   with:
  #     build-environment: linux-xenial-py3-clang5-mobile-build
  #     docker-image-name: pytorch-linux-xenial-py3-clang5-asan
  #     build-generates-artifacts: false

  # linux-xenial-py3-clang5-mobile-custom-build-static:
  #   name: linux-xenial-py3-clang5-mobile-custom-build-static
  #   uses: ./.github/workflows/_linux-build.yml
  #   with:
  #     build-environment: linux-xenial-py3-clang5-mobile-custom-build-static
  #     docker-image-name: pytorch-linux-xenial-py3-clang5-android-ndk-r19c
  #     build-generates-artifacts: false

  # pytorch-xla-linux-bionic-py3_7-clang8-build:
  #   name: pytorch-xla-linux-bionic-py3.7-clang8
  #   uses: ./.github/workflows/_linux-build.yml
  #   with:
  #     build-environment: pytorch-xla-linux-bionic-py3.7-clang8
  #     docker-image-name: xla_base

  # pytorch-xla-linux-bionic-py3_7-clang8-test:
  #   name: pytorch-xla-linux-bionic-py3.7-clang8
  #   uses: ./.github/workflows/_linux-test.yml
  #   needs: pytorch-xla-linux-bionic-py3_7-clang8-build
  #   with:
  #     build-environment: pytorch-xla-linux-bionic-py3.7-clang8
  #     docker-image: ${{ needs.pytorch-xla-linux-bionic-py3_7-clang8-build.outputs.docker-image }}
  #     test-matrix: |
  #       { include: [
  #         { config: "xla", shard: 1, num_shards: 1, runner: "linux.2xlarge" },
  #       ]}

  # win-vs2019-cpu-py3-build:
  #   name: win-vs2019-cpu-py3
  #   uses: ./.github/workflows/_win-build.yml
  #   with:
  #     build-environment: win-vs2019-cpu-py3
  #     cuda-version: cpu

  # win-vs2019-cpu-py3-test:
  #   name: win-vs2019-cpu-py3
  #   uses: ./.github/workflows/_win-test.yml
  #   needs: win-vs2019-cpu-py3-build
  #   with:
  #     build-environment: win-vs2019-cpu-py3
  #     cuda-version: cpu
  #     test-matrix: |
  #       { include: [
  #         { config: "default", shard: 1, num_shards: 2, runner: "windows.4xlarge" },
  #         { config: "default", shard: 2, num_shards: 2, runner: "windows.4xlarge" },
  #       ]}

  # win-vs2019-cuda11_3-py3-build:
  #   name: win-vs2019-cuda11.3-py3
  #   uses: ./.github/workflows/_win-build.yml
  #   with:
  #     build-environment: win-vs2019-cuda11.3-py3
  #     cuda-version: "11.3"

  # win-vs2019-cuda11_3-py3-test:
  #   name: win-vs2019-cuda11.3-py3
  #   uses: ./.github/workflows/_win-test.yml
  #   needs: win-vs2019-cuda11_3-py3-build
  #   with:
  #     build-environment: win-vs2019-cuda11.3-py3
  #     cuda-version: "11.3"
  #     test-matrix: |
  #       { include: [
  #         { config: "default", shard: 1, num_shards: 2, runner: "windows.8xlarge.nvidia.gpu" },
  #         { config: "default", shard: 2, num_shards: 2, runner: "windows.8xlarge.nvidia.gpu" },
  #         { config: "force_on_cpu", shard: 1, num_shards: 1, runner: "windows.4xlarge" },
  #       ]}

  # linux-xenial-cuda11_3-py3_7-gcc7-bazel-test:
  #   name: linux-xenial-cuda11.3-py3.7-gcc7-bazel-test
  #   uses: ./.github/workflows/_bazel-build-test.yml
  #   with:
  #     build-environment: linux-xenial-cuda11.3-py3.7-gcc7-bazel-test
  #     docker-image-name: pytorch-linux-xenial-cuda11.3-cudnn8-py3-gcc7

  # ios-12-5-1-x86-64:
  #   name: ios-12-5-1-x86-64
  #   uses: ./.github/workflows/_ios-build-test.yml
  #   with:
  #     build-environment: ios-12-5-1-x86-64
  #     ios-platform: SIMULATOR
  #     ios-arch: x86_64

  # ios-12-5-1-x86-64-coreml:
  #   name: ios-12-5-1-x86-64-coreml
  #   uses: ./.github/workflows/_ios-build-test.yml
  #   with:
  #     build-environment: ios-12-5-1-x86-64-coreml
  #     ios-platform: SIMULATOR
  #     ios-arch: x86_64

  # macos-11-py3-x86-64-build:
  #   name: macos-11-py3-x86-64
  #   uses: ./.github/workflows/_mac-build.yml
  #   with:
  #     build-environment: macos-11-py3-x86-64
  #     xcode-version: "12.4"
  #     runner-type: macos-11
  #     build-generates-artifacts: true

  # macos-11-py3-x86-64-test:
  #   name: macos-11-py3-x86-64
  #   uses: ./.github/workflows/_mac-test.yml
  #   needs: macos-11-py3-x86-64-build
  #   with:
  #     build-environment: macos-11-py3-x86-64
  #     test-matrix: |
  #       { include: [
  #         { config: "default", shard: 1, num_shards: 2, runner: "macos-11" },
  #         { config: "default", shard: 2, num_shards: 2, runner: "macos-11" },
  #       ]}

  pytorch-linux-xenial-py3-clang5-android-ndk-r19c-build:
    name: pytorch-linux-xenial-py3-clang5-android-ndk-r19c-build
    uses: ./.github/workflows/_android-full-build-test.yml
    with:
      build-environment: pytorch-linux-xenial-py3-clang5-android-ndk-r19c-build
      docker-image-name: pytorch-linux-xenial-py3-clang5-android-ndk-r19c

  pytorch-linux-xenial-py3-clang5-android-ndk-r19c-gradle-custom-build-single:
    name: pytorch-linux-xenial-py3-clang5-android-ndk-r19c-gradle-custom-build-single
    uses: ./.github/workflows/_android-build-test.yml
    with:
      build-environment: pytorch-linux-xenial-py3-clang5-android-ndk-r19c-gradle-custom-build-single
      docker-image-name: pytorch-linux-xenial-py3-clang5-android-ndk-r19c

  pytorch-linux-xenial-py3-clang5-android-ndk-r19c-gradle-custom-build-single-full-jit:
    name: pytorch-linux-xenial-py3-clang5-android-ndk-r19c-gradle-custom-build-single-full-jit
    uses: ./.github/workflows/_android-build-test.yml
    with:
      build-environment: pytorch-linux-xenial-py3-clang5-android-ndk-r19c-gradle-custom-build-single-full-jit
      docker-image-name: pytorch-linux-xenial-py3-clang5-android-ndk-r19c
